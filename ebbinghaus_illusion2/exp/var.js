let standardSide  =   ['left', 'right'];
let noContextStim =   [];
let contextStim   =   [];
let trialNumber = 1;
let blockNumber = 1;

for (let i=0; i<standardSide.length; i++){
  if (standardSide[i] == 'left') {
    contextStim.push({
      condition: 'helpful',
      stimulusLeft: standardSize,
      stimulusRight: stimSizes[stimSizes.length/2-1],
      surroundLeft: peripheralSmall,
      surroundLeftX0: cxSmall[0],
      surroundLeftX1: cxSmall[1],
      surroundLeftX2: cxSmall[2],
      surroundLeftX3: cxSmall[3],
      surroundLeftX4: cxSmall[4],
      surroundLeftX5: cxSmall[5],
      surroundLeftX6: cxSmall[6],
      surroundLeftX7: cxSmall[7],
      surroundLeftY0: cySmall[0],
      surroundLeftY1: cySmall[1],
      surroundLeftY2: cySmall[2],
      surroundLeftY3: cySmall[3],
      surroundLeftY4: cySmall[4],
      surroundLeftY5: cySmall[5],
      surroundLeftY6: cySmall[6],
      surroundLeftY7: cySmall[7],
      surroundRight: peripheralLarge,
      surroundRightX0: cxLarge[0],
      surroundRightX1: cxLarge[1],
      surroundRightX2: cxLarge[2],
      surroundRightX3: cxLarge[3],
      surroundRightX4: cxLarge[4],
      surroundRightX5: cxLarge[5],
      surroundRightX6: cxLarge[6],
      surroundRightX7: cxLarge[7],
      surroundRightY0: cyLarge[0],
      surroundRightY1: cyLarge[1],
      surroundRightY2: cyLarge[2],
      surroundRightY3: cyLarge[3],
      surroundRightY4: cyLarge[4],
      surroundRightY5: cyLarge[5],
      surroundRightY6: cyLarge[6],
      surroundRightY7: cyLarge[7],
      peripheralColor: peripheralColor,
      data: {
        condition: 'helpful',
        stim_center_left: standardSize,
        stim_center_right: stimSizes[stimSizes.length/2-1],
        stim_surround_left: peripheralSmall,
        stim_surround_right: peripheralLarge,
        correct_response: leftASCII
      }
    })
    contextStim.push({
      condition: 'helpful',
      stimulusLeft: standardSize,
      stimulusRight: stimSizes[stimSizes.length/2],
      surroundLeft: peripheralLarge,
      surroundLeftX0: cxLarge[0],
      surroundLeftX1: cxLarge[1],
      surroundLeftX2: cxLarge[2],
      surroundLeftX3: cxLarge[3],
      surroundLeftX4: cxLarge[4],
      surroundLeftX5: cxLarge[5],
      surroundLeftX6: cxLarge[6],
      surroundLeftX7: cxLarge[7],
      surroundLeftY0: cyLarge[0],
      surroundLeftY1: cyLarge[1],
      surroundLeftY2: cyLarge[2],
      surroundLeftY3: cyLarge[3],
      surroundLeftY4: cyLarge[4],
      surroundLeftY5: cyLarge[5],
      surroundLeftY6: cyLarge[6],
      surroundLeftY7: cyLarge[7],
      surroundRight: peripheralSmall,
      surroundRightX0: cxSmall[0],
      surroundRightX1: cxSmall[1],
      surroundRightX2: cxSmall[2],
      surroundRightX3: cxSmall[3],
      surroundRightX4: cxSmall[4],
      surroundRightX5: cxSmall[5],
      surroundRightX6: cxSmall[6],
      surroundRightX7: cxSmall[7],
      surroundRightY0: cySmall[0],
      surroundRightY1: cySmall[1],
      surroundRightY2: cySmall[2],
      surroundRightY3: cySmall[3],
      surroundRightY4: cySmall[4],
      surroundRightY5: cySmall[5],
      surroundRightY6: cySmall[6],
      surroundRightY7: cySmall[7],
      peripheralColor: peripheralColor,
      data: {
        condition: 'helpful',
        stim_center_left: standardSize,
        stim_center_right: stimSizes[stimSizes.length/2],
        stim_surround_left: peripheralSmall,
        stim_surround_right: peripheralLarge,
        correct_response: leftASCII
      }
    });
  } else if (standardSide[i] == 'right') {
    contextStim.push({
      condition: 'helpful',
      stimulusLeft: stimSizes[stimSizes.length/2-1],
      stimulusRight: standardSize,
      surroundLeft: peripheralLarge,
      surroundLeftX0: cxLarge[0],
      surroundLeftX1: cxLarge[1],
      surroundLeftX2: cxLarge[2],
      surroundLeftX3: cxLarge[3],
      surroundLeftX4: cxLarge[4],
      surroundLeftX5: cxLarge[5],
      surroundLeftX6: cxLarge[6],
      surroundLeftX7: cxLarge[7],
      surroundLeftY0: cyLarge[0],
      surroundLeftY1: cyLarge[1],
      surroundLeftY2: cyLarge[2],
      surroundLeftY3: cyLarge[3],
      surroundLeftY4: cyLarge[4],
      surroundLeftY5: cyLarge[5],
      surroundLeftY6: cyLarge[6],
      surroundLeftY7: cyLarge[7],
      surroundRight: peripheralSmall,
      surroundRightX0: cxSmall[0],
      surroundRightX1: cxSmall[1],
      surroundRightX2: cxSmall[2],
      surroundRightX3: cxSmall[3],
      surroundRightX4: cxSmall[4],
      surroundRightX5: cxSmall[5],
      surroundRightX6: cxSmall[6],
      surroundRightX7: cxSmall[7],
      surroundRightY0: cySmall[0],
      surroundRightY1: cySmall[1],
      surroundRightY2: cySmall[2],
      surroundRightY3: cySmall[3],
      surroundRightY4: cySmall[4],
      surroundRightY5: cySmall[5],
      surroundRightY6: cySmall[6],
      surroundRightY7: cySmall[7],
      peripheralColor: peripheralColor,
      data: {
        condition: 'helpful',
        stim_center_left: stimSizes[stimSizes.length/2-1],
        stim_center_right: standardSize,
        stim_surround_left: peripheralLarge,
        stim_surround_right: peripheralSmall,
        correct_response: rightASCII
      }
    })
    contextStim.push({
      condition: 'helpful',
      stimulusLeft: stimSizes[stimSizes.length/2],
      stimulusRight: standardSize,
      surroundLeft: peripheralSmall,
      surroundLeftX0: cxSmall[0],
      surroundLeftX1: cxSmall[1],
      surroundLeftX2: cxSmall[2],
      surroundLeftX3: cxSmall[3],
      surroundLeftX4: cxSmall[4],
      surroundLeftX5: cxSmall[5],
      surroundLeftX6: cxSmall[6],
      surroundLeftX7: cxSmall[7],
      surroundLeftY0: cySmall[0],
      surroundLeftY1: cySmall[1],
      surroundLeftY2: cySmall[2],
      surroundLeftY3: cySmall[3],
      surroundLeftY4: cySmall[4],
      surroundLeftY5: cySmall[5],
      surroundLeftY6: cySmall[6],
      surroundLeftY7: cySmall[7],
      surroundRight: peripheralLarge,
      surroundRightX0: cxLarge[0],
      surroundRightX1: cxLarge[1],
      surroundRightX2: cxLarge[2],
      surroundRightX3: cxLarge[3],
      surroundRightX4: cxLarge[4],
      surroundRightX5: cxLarge[5],
      surroundRightX6: cxLarge[6],
      surroundRightX7: cxLarge[7],
      surroundRightY0: cyLarge[0],
      surroundRightY1: cyLarge[1],
      surroundRightY2: cyLarge[2],
      surroundRightY3: cyLarge[3],
      surroundRightY4: cyLarge[4],
      surroundRightY5: cyLarge[5],
      surroundRightY6: cyLarge[6],
      surroundRightY7: cyLarge[7],
      peripheralColor: peripheralColor,
      data: {
        condition: 'helpful',
        stim_center_left: stimSizes[stimSizes.length/2],
        stim_center_right: standardSize,
        stim_surround_left: peripheralLarge,
        stim_surround_right: peripheralSmall,
        correct_response: rightASCII
      }
    });
  }
  for (let j=0; j<stimSizes.length; j++){
    if (standardSide[i] == 'left') {
      if (standardSize >= stimSizes[j]) {        // correct response = left
        noContextStim.push({
          condition: 'no-context',
          stimulusLeft: standardSize,
          stimulusRight: stimSizes[j],
          surroundLeft: peripheralLarge,
          surroundLeftX0: cxLarge[0],
          surroundLeftX1: cxLarge[1],
          surroundLeftX2: cxLarge[2],
          surroundLeftX3: cxLarge[3],
          surroundLeftX4: cxLarge[4],
          surroundLeftX5: cxLarge[5],
          surroundLeftX6: cxLarge[6],
          surroundLeftX7: cxLarge[7],
          surroundLeftY0: cyLarge[0],
          surroundLeftY1: cyLarge[1],
          surroundLeftY2: cyLarge[2],
          surroundLeftY3: cyLarge[3],
          surroundLeftY4: cyLarge[4],
          surroundLeftY5: cyLarge[5],
          surroundLeftY6: cyLarge[6],
          surroundLeftY7: cyLarge[7],
          surroundRight: peripheralSmall,
          surroundRightX0: cxSmall[0],
          surroundRightX1: cxSmall[1],
          surroundRightX2: cxSmall[2],
          surroundRightX3: cxSmall[3],
          surroundRightX4: cxSmall[4],
          surroundRightX5: cxSmall[5],
          surroundRightX6: cxSmall[6],
          surroundRightX7: cxSmall[7],
          surroundRightY0: cySmall[0],
          surroundRightY1: cySmall[1],
          surroundRightY2: cySmall[2],
          surroundRightY3: cySmall[3],
          surroundRightY4: cySmall[4],
          surroundRightY5: cySmall[5],
          surroundRightY6: cySmall[6],
          surroundRightY7: cySmall[7],
          peripheralColor: 'none',
          data: {
            condition: 'no-context',
            stim_center_left: standardSize,
            stim_center_right: stimSizes[j],
            stim_surround_left: 'none',
            stim_surround_right: 'none',
            correct_response: leftASCII
          }
        })
        contextStim.push({
          condition: 'misleading',
          stimulusLeft: standardSize,
          stimulusRight: stimSizes[j],
          surroundLeft: peripheralLarge,
          surroundLeftX0: cxLarge[0],
          surroundLeftX1: cxLarge[1],
          surroundLeftX2: cxLarge[2],
          surroundLeftX3: cxLarge[3],
          surroundLeftX4: cxLarge[4],
          surroundLeftX5: cxLarge[5],
          surroundLeftX6: cxLarge[6],
          surroundLeftX7: cxLarge[7],
          surroundLeftY0: cyLarge[0],
          surroundLeftY1: cyLarge[1],
          surroundLeftY2: cyLarge[2],
          surroundLeftY3: cyLarge[3],
          surroundLeftY4: cyLarge[4],
          surroundLeftY5: cyLarge[5],
          surroundLeftY6: cyLarge[6],
          surroundLeftY7: cyLarge[7],
          surroundRight: peripheralSmall,
          surroundRightX0: cxSmall[0],
          surroundRightX1: cxSmall[1],
          surroundRightX2: cxSmall[2],
          surroundRightX3: cxSmall[3],
          surroundRightX4: cxSmall[4],
          surroundRightX5: cxSmall[5],
          surroundRightX6: cxSmall[6],
          surroundRightX7: cxSmall[7],
          surroundRightY0: cySmall[0],
          surroundRightY1: cySmall[1],
          surroundRightY2: cySmall[2],
          surroundRightY3: cySmall[3],
          surroundRightY4: cySmall[4],
          surroundRightY5: cySmall[5],
          surroundRightY6: cySmall[6],
          surroundRightY7: cySmall[7],
          peripheralColor: peripheralColor,
          data: {
            condition: 'misleading',
            stim_center_left: standardSize,
            stim_center_right: stimSizes[j],
            stim_surround_left: peripheralLarge,
            stim_surround_right: peripheralSmall,
            correct_response: leftASCII
          }
        });
      } else if (standardSize <= stimSizes[j]) { // correct response = right
        noContextStim.push({
          condition: 'no-context',
          stimulusLeft: standardSize,
          stimulusRight: stimSizes[j],
          surroundLeft: peripheralSmall,
          surroundLeftX0: cxSmall[0],
          surroundLeftX1: cxSmall[1],
          surroundLeftX2: cxSmall[2],
          surroundLeftX3: cxSmall[3],
          surroundLeftX4: cxSmall[4],
          surroundLeftX5: cxSmall[5],
          surroundLeftX6: cxSmall[6],
          surroundLeftX7: cxSmall[7],
          surroundLeftY0: cySmall[0],
          surroundLeftY1: cySmall[1],
          surroundLeftY2: cySmall[2],
          surroundLeftY3: cySmall[3],
          surroundLeftY4: cySmall[4],
          surroundLeftY5: cySmall[5],
          surroundLeftY6: cySmall[6],
          surroundLeftY7: cySmall[7],
          surroundRight: peripheralLarge,
          surroundRightX0: cxLarge[0],
          surroundRightX1: cxLarge[1],
          surroundRightX2: cxLarge[2],
          surroundRightX3: cxLarge[3],
          surroundRightX4: cxLarge[4],
          surroundRightX5: cxLarge[5],
          surroundRightX6: cxLarge[6],
          surroundRightX7: cxLarge[7],
          surroundRightY0: cyLarge[0],
          surroundRightY1: cyLarge[1],
          surroundRightY2: cyLarge[2],
          surroundRightY3: cyLarge[3],
          surroundRightY4: cyLarge[4],
          surroundRightY5: cyLarge[5],
          surroundRightY6: cyLarge[6],
          surroundRightY7: cyLarge[7],
          peripheralColor: 'none',
          data: {
            condition: 'no-context',
            stim_center_left: standardSize,
            stim_center_right: stimSizes[j],
            stim_surround_left: 'none',
            stim_surround_right: 'none',
            correct_response: rightASCII
          }
        })
        contextStim.push({
          condition: 'misleading',
          stimulusLeft: standardSize,
          stimulusRight: stimSizes[j],
          surroundLeft: peripheralSmall,
          surroundLeftX0: cxSmall[0],
          surroundLeftX1: cxSmall[1],
          surroundLeftX2: cxSmall[2],
          surroundLeftX3: cxSmall[3],
          surroundLeftX4: cxSmall[4],
          surroundLeftX5: cxSmall[5],
          surroundLeftX6: cxSmall[6],
          surroundLeftX7: cxSmall[7],
          surroundLeftY0: cySmall[0],
          surroundLeftY1: cySmall[1],
          surroundLeftY2: cySmall[2],
          surroundLeftY3: cySmall[3],
          surroundLeftY4: cySmall[4],
          surroundLeftY5: cySmall[5],
          surroundLeftY6: cySmall[6],
          surroundLeftY7: cySmall[7],
          surroundRight: peripheralLarge,
          surroundRightX0: cxLarge[0],
          surroundRightX1: cxLarge[1],
          surroundRightX2: cxLarge[2],
          surroundRightX3: cxLarge[3],
          surroundRightX4: cxLarge[4],
          surroundRightX5: cxLarge[5],
          surroundRightX6: cxLarge[6],
          surroundRightX7: cxLarge[7],
          surroundRightY0: cyLarge[0],
          surroundRightY1: cyLarge[1],
          surroundRightY2: cyLarge[2],
          surroundRightY3: cyLarge[3],
          surroundRightY4: cyLarge[4],
          surroundRightY5: cyLarge[5],
          surroundRightY6: cyLarge[6],
          surroundRightY7: cyLarge[7],
          peripheralColor: peripheralColor,
          data: {
            condition: 'misleading',
            stim_center_left: standardSize,
            stim_center_right: stimSizes[j],
            stim_surround_left: peripheralSmall,
            stim_surround_right: peripheralLarge,
            correct_response: rightASCII
          }
        });
      }
    } else if (standardSide[i] == 'right') {
      if (standardSize >= stimSizes[j]) {        // correct response = right
        noContextStim.push({
          condition: 'no-context',
          stimulusLeft: stimSizes[j],
          stimulusRight: standardSize,
          surroundLeft: peripheralSmall,
          surroundLeftX0: cxSmall[0],
          surroundLeftX1: cxSmall[1],
          surroundLeftX2: cxSmall[2],
          surroundLeftX3: cxSmall[3],
          surroundLeftX4: cxSmall[4],
          surroundLeftX5: cxSmall[5],
          surroundLeftX6: cxSmall[6],
          surroundLeftX7: cxSmall[7],
          surroundLeftY0: cySmall[0],
          surroundLeftY1: cySmall[1],
          surroundLeftY2: cySmall[2],
          surroundLeftY3: cySmall[3],
          surroundLeftY4: cySmall[4],
          surroundLeftY5: cySmall[5],
          surroundLeftY6: cySmall[6],
          surroundLeftY7: cySmall[7],
          surroundRight: peripheralLarge,
          surroundRightX0: cxLarge[0],
          surroundRightX1: cxLarge[1],
          surroundRightX2: cxLarge[2],
          surroundRightX3: cxLarge[3],
          surroundRightX4: cxLarge[4],
          surroundRightX5: cxLarge[5],
          surroundRightX6: cxLarge[6],
          surroundRightX7: cxLarge[7],
          surroundRightY0: cyLarge[0],
          surroundRightY1: cyLarge[1],
          surroundRightY2: cyLarge[2],
          surroundRightY3: cyLarge[3],
          surroundRightY4: cyLarge[4],
          surroundRightY5: cyLarge[5],
          surroundRightY6: cyLarge[6],
          surroundRightY7: cyLarge[7],
          peripheralColor: 'none',
          data: {
            condition: 'no-context',
            stim_center_left: stimSizes[j],
            stim_center_right: standardSize,
            stim_surround_left: 'none',
            stim_surround_right: 'none',
            correct_response: rightASCII
          }
        })
        contextStim.push({
          condition: 'misleading',
          stimulusLeft: stimSizes[j],
          stimulusRight: standardSize,
          surroundLeft: peripheralSmall,
          surroundLeftX0: cxSmall[0],
          surroundLeftX1: cxSmall[1],
          surroundLeftX2: cxSmall[2],
          surroundLeftX3: cxSmall[3],
          surroundLeftX4: cxSmall[4],
          surroundLeftX5: cxSmall[5],
          surroundLeftX6: cxSmall[6],
          surroundLeftX7: cxSmall[7],
          surroundLeftY0: cySmall[0],
          surroundLeftY1: cySmall[1],
          surroundLeftY2: cySmall[2],
          surroundLeftY3: cySmall[3],
          surroundLeftY4: cySmall[4],
          surroundLeftY5: cySmall[5],
          surroundLeftY6: cySmall[6],
          surroundLeftY7: cySmall[7],
          surroundRight: peripheralLarge,
          surroundRightX0: cxLarge[0],
          surroundRightX1: cxLarge[1],
          surroundRightX2: cxLarge[2],
          surroundRightX3: cxLarge[3],
          surroundRightX4: cxLarge[4],
          surroundRightX5: cxLarge[5],
          surroundRightX6: cxLarge[6],
          surroundRightX7: cxLarge[7],
          surroundRightY0: cyLarge[0],
          surroundRightY1: cyLarge[1],
          surroundRightY2: cyLarge[2],
          surroundRightY3: cyLarge[3],
          surroundRightY4: cyLarge[4],
          surroundRightY5: cyLarge[5],
          surroundRightY6: cyLarge[6],
          surroundRightY7: cyLarge[7],
          peripheralColor: peripheralColor,
          data: {
            condition: 'misleading',
            stim_center_left: stimSizes[j],
            stim_center_right: standardSize,
            stim_surround_left: peripheralSmall,
            stim_surround_right: peripheralLarge,
            correct_response: rightASCII
          }
        });
      } else if (standardSize <= stimSizes[j]) { // correct response = left
        noContextStim.push({
          condition: 'no-context',
          stimulusLeft: stimSizes[j],
          stimulusRight: standardSize,
          surroundLeft: peripheralLarge,
          surroundLeftX0: cxLarge[0],
          surroundLeftX1: cxLarge[1],
          surroundLeftX2: cxLarge[2],
          surroundLeftX3: cxLarge[3],
          surroundLeftX4: cxLarge[4],
          surroundLeftX5: cxLarge[5],
          surroundLeftX6: cxLarge[6],
          surroundLeftX7: cxLarge[7],
          surroundLeftY0: cyLarge[0],
          surroundLeftY1: cyLarge[1],
          surroundLeftY2: cyLarge[2],
          surroundLeftY3: cyLarge[3],
          surroundLeftY4: cyLarge[4],
          surroundLeftY5: cyLarge[5],
          surroundLeftY6: cyLarge[6],
          surroundLeftY7: cyLarge[7],
          surroundRight: peripheralSmall,
          surroundRightX0: cxSmall[0],
          surroundRightX1: cxSmall[1],
          surroundRightX2: cxSmall[2],
          surroundRightX3: cxSmall[3],
          surroundRightX4: cxSmall[4],
          surroundRightX5: cxSmall[5],
          surroundRightX6: cxSmall[6],
          surroundRightX7: cxSmall[7],
          surroundRightY0: cySmall[0],
          surroundRightY1: cySmall[1],
          surroundRightY2: cySmall[2],
          surroundRightY3: cySmall[3],
          surroundRightY4: cySmall[4],
          surroundRightY5: cySmall[5],
          surroundRightY6: cySmall[6],
          surroundRightY7: cySmall[7],
          peripheralColor: 'none',
          data: {
            condition: 'no-context',
            stim_center_left: stimSizes[j],
            stim_center_right: standardSize,
            stim_surround_left: 'none',
            stim_surround_right: 'none',
            correct_response: leftASCII
          }
        })
        contextStim.push({
          condition: 'misleading',
          stimulusLeft: stimSizes[j],
          stimulusRight: standardSize,
          surroundLeft: peripheralLarge,
          surroundLeftX0: cxLarge[0],
          surroundLeftX1: cxLarge[1],
          surroundLeftX2: cxLarge[2],
          surroundLeftX3: cxLarge[3],
          surroundLeftX4: cxLarge[4],
          surroundLeftX5: cxLarge[5],
          surroundLeftX6: cxLarge[6],
          surroundLeftX7: cxLarge[7],
          surroundLeftY0: cyLarge[0],
          surroundLeftY1: cyLarge[1],
          surroundLeftY2: cyLarge[2],
          surroundLeftY3: cyLarge[3],
          surroundLeftY4: cyLarge[4],
          surroundLeftY5: cyLarge[5],
          surroundLeftY6: cyLarge[6],
          surroundLeftY7: cyLarge[7],
          surroundRight: peripheralSmall,
          surroundRightX0: cxSmall[0],
          surroundRightX1: cxSmall[1],
          surroundRightX2: cxSmall[2],
          surroundRightX3: cxSmall[3],
          surroundRightX4: cxSmall[4],
          surroundRightX5: cxSmall[5],
          surroundRightX6: cxSmall[6],
          surroundRightX7: cxSmall[7],
          surroundRightY0: cySmall[0],
          surroundRightY1: cySmall[1],
          surroundRightY2: cySmall[2],
          surroundRightY3: cySmall[3],
          surroundRightY4: cySmall[4],
          surroundRightY5: cySmall[5],
          surroundRightY6: cySmall[6],
          surroundRightY7: cySmall[7],
          peripheralColor: peripheralColor,
          data: {
            condition: 'misleading',
            stim_center_left: stimSizes[j],
            stim_center_right: standardSize,
            stim_surround_left: peripheralLarge,
            stim_surround_right: peripheralSmall,
            correct_response: leftASCII
          }
        });
      }
    }
  }
}
let numberOfNoContextTrialsPerBlock = noContextStim.length
let numberOfContextTrialsPerBlock = contextStim.length
